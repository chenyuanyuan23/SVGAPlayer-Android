// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: svga.proto
package com.opensource.svgaplayer.proto;

import com.squareup.wire.AndroidMessage;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;

import okio.ByteString;

public final class Layout extends AndroidMessage<Layout, Layout.Builder> {
  public static final ProtoAdapter<Layout> ADAPTER = ProtoAdapter.newMessageAdapter(Layout.class);

  public static final Creator<Layout> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  public static final Float DEFAULT_X = 0.0f;

  public static final Float DEFAULT_Y = 0.0f;

  public static final Float DEFAULT_WIDTH = 0.0f;

  public static final Float DEFAULT_HEIGHT = 0.0f;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#FLOAT"
  )
  public final Float x;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#FLOAT"
  )
  public final Float y;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#FLOAT"
  )
  public final Float width;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#FLOAT"
  )
  public final Float height;

  public Layout(Float x, Float y, Float width, Float height) {
    this(x, y, width, height, ByteString.EMPTY);
  }

  public Layout(Float x, Float y, Float width, Float height, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.x = x;
    this.y = y;
    this.width = width;
    this.height = height;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.x = x;
    builder.y = y;
    builder.width = width;
    builder.height = height;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Layout)) return false;
    Layout o = (Layout) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(x, o.x)
        && Internal.equals(y, o.y)
        && Internal.equals(width, o.width)
        && Internal.equals(height, o.height);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (x != null ? x.hashCode() : 0);
      result = result * 37 + (y != null ? y.hashCode() : 0);
      result = result * 37 + (width != null ? width.hashCode() : 0);
      result = result * 37 + (height != null ? height.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Layout, Builder> {
    public Float x;

    public Float y;

    public Float width;

    public Float height;

    public Builder() {
    }

    public Builder x(Float x) {
      this.x = x;
      return this;
    }

    public Builder y(Float y) {
      this.y = y;
      return this;
    }

    public Builder width(Float width) {
      this.width = width;
      return this;
    }

    public Builder height(Float height) {
      this.height = height;
      return this;
    }

    @Override
    public Layout build() {
      return new Layout(x, y, width, height, super.buildUnknownFields());
    }
  }
}
