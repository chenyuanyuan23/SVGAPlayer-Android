// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: cproxy.proto
package ikxd.cproxy;

import android.os.Parcelable;
import com.squareup.wire.AndroidMessage;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import common.Header;
import java.lang.Object;
import java.lang.Override;
import okio.ByteString;

public final class CProxy extends AndroidMessage<CProxy, CProxy.Builder> {
  public static final ProtoAdapter<CProxy> ADAPTER = ProtoAdapter.newMessageAdapter(CProxy.class);

  public static final Creator<CProxy> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  public static final Uri DEFAULT_URI = Uri.kUriNone;

  @WireField(
      tag = 1,
      adapter = "common.Header#ADAPTER"
  )
  public final Header header;

  @WireField(
      tag = 2,
      adapter = "ikxd.cproxy.Uri#ADAPTER"
  )
  public final Uri uri;

  @WireField(
      tag = 11,
      adapter = "ikxd.cproxy.ToastNotify#ADAPTER"
  )
  public final ToastNotify toast_notify;

  @WireField(
      tag = 12,
      adapter = "ikxd.cproxy.JoinRoomReq#ADAPTER"
  )
  public final JoinRoomReq join_room_req;

  @WireField(
      tag = 13,
      adapter = "ikxd.cproxy.JoinRoomRes#ADAPTER"
  )
  public final JoinRoomRes join_room_res;

  @WireField(
      tag = 14,
      adapter = "ikxd.cproxy.LeaveRoomReq#ADAPTER"
  )
  public final LeaveRoomReq leave_room_req;

  @WireField(
      tag = 15,
      adapter = "ikxd.cproxy.LeaveRoomRes#ADAPTER"
  )
  public final LeaveRoomRes leave_room_res;

  @WireField(
      tag = 16,
      adapter = "ikxd.cproxy.HeartbeatReq#ADAPTER"
  )
  public final HeartbeatReq heartbeat_req;

  @WireField(
      tag = 17,
      adapter = "ikxd.cproxy.HeartbeatRes#ADAPTER"
  )
  public final HeartbeatRes heartbeat_res;

  @WireField(
      tag = 18,
      adapter = "ikxd.cproxy.ProbeNotify#ADAPTER"
  )
  public final ProbeNotify probe_notify;

  public CProxy(Header header, Uri uri, ToastNotify toast_notify, JoinRoomReq join_room_req,
      JoinRoomRes join_room_res, LeaveRoomReq leave_room_req, LeaveRoomRes leave_room_res,
      HeartbeatReq heartbeat_req, HeartbeatRes heartbeat_res, ProbeNotify probe_notify) {
    this(header, uri, toast_notify, join_room_req, join_room_res, leave_room_req, leave_room_res, heartbeat_req, heartbeat_res, probe_notify, ByteString.EMPTY);
  }

  public CProxy(Header header, Uri uri, ToastNotify toast_notify, JoinRoomReq join_room_req,
      JoinRoomRes join_room_res, LeaveRoomReq leave_room_req, LeaveRoomRes leave_room_res,
      HeartbeatReq heartbeat_req, HeartbeatRes heartbeat_res, ProbeNotify probe_notify,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.header = header;
    this.uri = uri;
    this.toast_notify = toast_notify;
    this.join_room_req = join_room_req;
    this.join_room_res = join_room_res;
    this.leave_room_req = leave_room_req;
    this.leave_room_res = leave_room_res;
    this.heartbeat_req = heartbeat_req;
    this.heartbeat_res = heartbeat_res;
    this.probe_notify = probe_notify;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.header = header;
    builder.uri = uri;
    builder.toast_notify = toast_notify;
    builder.join_room_req = join_room_req;
    builder.join_room_res = join_room_res;
    builder.leave_room_req = leave_room_req;
    builder.leave_room_res = leave_room_res;
    builder.heartbeat_req = heartbeat_req;
    builder.heartbeat_res = heartbeat_res;
    builder.probe_notify = probe_notify;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CProxy)) return false;
    CProxy o = (CProxy) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(header, o.header)
        && Internal.equals(uri, o.uri)
        && Internal.equals(toast_notify, o.toast_notify)
        && Internal.equals(join_room_req, o.join_room_req)
        && Internal.equals(join_room_res, o.join_room_res)
        && Internal.equals(leave_room_req, o.leave_room_req)
        && Internal.equals(leave_room_res, o.leave_room_res)
        && Internal.equals(heartbeat_req, o.heartbeat_req)
        && Internal.equals(heartbeat_res, o.heartbeat_res)
        && Internal.equals(probe_notify, o.probe_notify);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (header != null ? header.hashCode() : 0);
      result = result * 37 + (uri != null ? uri.hashCode() : 0);
      result = result * 37 + (toast_notify != null ? toast_notify.hashCode() : 0);
      result = result * 37 + (join_room_req != null ? join_room_req.hashCode() : 0);
      result = result * 37 + (join_room_res != null ? join_room_res.hashCode() : 0);
      result = result * 37 + (leave_room_req != null ? leave_room_req.hashCode() : 0);
      result = result * 37 + (leave_room_res != null ? leave_room_res.hashCode() : 0);
      result = result * 37 + (heartbeat_req != null ? heartbeat_req.hashCode() : 0);
      result = result * 37 + (heartbeat_res != null ? heartbeat_res.hashCode() : 0);
      result = result * 37 + (probe_notify != null ? probe_notify.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<CProxy, Builder> {
    public Header header;

    public Uri uri;

    public ToastNotify toast_notify;

    public JoinRoomReq join_room_req;

    public JoinRoomRes join_room_res;

    public LeaveRoomReq leave_room_req;

    public LeaveRoomRes leave_room_res;

    public HeartbeatReq heartbeat_req;

    public HeartbeatRes heartbeat_res;

    public ProbeNotify probe_notify;

    public Builder() {
    }

    public Builder header(Header header) {
      this.header = header;
      return this;
    }

    public Builder uri(Uri uri) {
      this.uri = uri;
      return this;
    }

    public Builder toast_notify(ToastNotify toast_notify) {
      this.toast_notify = toast_notify;
      return this;
    }

    public Builder join_room_req(JoinRoomReq join_room_req) {
      this.join_room_req = join_room_req;
      return this;
    }

    public Builder join_room_res(JoinRoomRes join_room_res) {
      this.join_room_res = join_room_res;
      return this;
    }

    public Builder leave_room_req(LeaveRoomReq leave_room_req) {
      this.leave_room_req = leave_room_req;
      return this;
    }

    public Builder leave_room_res(LeaveRoomRes leave_room_res) {
      this.leave_room_res = leave_room_res;
      return this;
    }

    public Builder heartbeat_req(HeartbeatReq heartbeat_req) {
      this.heartbeat_req = heartbeat_req;
      return this;
    }

    public Builder heartbeat_res(HeartbeatRes heartbeat_res) {
      this.heartbeat_res = heartbeat_res;
      return this;
    }

    public Builder probe_notify(ProbeNotify probe_notify) {
      this.probe_notify = probe_notify;
      return this;
    }

    @Override
    public CProxy build() {
      return new CProxy(header, uri, toast_notify, join_room_req, join_room_res, leave_room_req, leave_room_res, heartbeat_req, heartbeat_res, probe_notify, super.buildUnknownFields());
    }
  }
}
