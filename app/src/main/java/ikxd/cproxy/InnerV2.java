// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: cproxy.proto
package ikxd.cproxy;

import android.os.Parcelable;
import com.squareup.wire.AndroidMessage;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import common.Header;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import okio.ByteString;

/**
 * cproxy新的解包方式
 */
public final class InnerV2 extends AndroidMessage<InnerV2, InnerV2.Builder> {
  public static final ProtoAdapter<InnerV2> ADAPTER = ProtoAdapter.newMessageAdapter(InnerV2.class);

  public static final Creator<InnerV2> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_URI = 0;

  public static final ByteString DEFAULT_PAYLOAD = ByteString.EMPTY;

  @WireField(
      tag = 1,
      adapter = "common.Header#ADAPTER"
  )
  public final Header header;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer uri;

  /**
   * 业务包承载
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#BYTES"
  )
  public final ByteString payload;

  public InnerV2(Header header, Integer uri, ByteString payload) {
    this(header, uri, payload, ByteString.EMPTY);
  }

  public InnerV2(Header header, Integer uri, ByteString payload, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.header = header;
    this.uri = uri;
    this.payload = payload;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.header = header;
    builder.uri = uri;
    builder.payload = payload;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InnerV2)) return false;
    InnerV2 o = (InnerV2) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(header, o.header)
        && Internal.equals(uri, o.uri)
        && Internal.equals(payload, o.payload);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (header != null ? header.hashCode() : 0);
      result = result * 37 + (uri != null ? uri.hashCode() : 0);
      result = result * 37 + (payload != null ? payload.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<InnerV2, Builder> {
    public Header header;

    public Integer uri;

    public ByteString payload;

    public Builder() {
    }

    public Builder header(Header header) {
      this.header = header;
      return this;
    }

    public Builder uri(Integer uri) {
      this.uri = uri;
      return this;
    }

    /**
     * 业务包承载
     */
    public Builder payload(ByteString payload) {
      this.payload = payload;
      return this;
    }

    @Override
    public InnerV2 build() {
      return new InnerV2(header, uri, payload, super.buildUnknownFields());
    }
  }
}
