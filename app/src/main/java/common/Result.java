// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: common.proto
package common;

import android.os.Parcelable;
import com.squareup.wire.AndroidMessage;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import okio.ByteString;

public final class Result extends AndroidMessage<Result, Result.Builder> {
  public static final ProtoAdapter<Result> ADAPTER = ProtoAdapter.newMessageAdapter(Result.class);

  public static final Creator<Result> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ERRCODE = 0L;

  public static final String DEFAULT_ERRMSG = "";

  public static final Long DEFAULT_MAGIC = 0L;

  /**
   * 每个协议自己定义, 0-999是系统保留
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long errcode;

  /**
   * 错误信息，可以被用来展示(包含了i18n的功能)
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String errmsg;

  /**
   * 兼容处理: 0x4861676f
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long magic;

  public Result(Long errcode, String errmsg, Long magic) {
    this(errcode, errmsg, magic, ByteString.EMPTY);
  }

  public Result(Long errcode, String errmsg, Long magic, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.errcode = errcode;
    this.errmsg = errmsg;
    this.magic = magic;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.errcode = errcode;
    builder.errmsg = errmsg;
    builder.magic = magic;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Result)) return false;
    Result o = (Result) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(errcode, o.errcode)
        && Internal.equals(errmsg, o.errmsg)
        && Internal.equals(magic, o.magic);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (errcode != null ? errcode.hashCode() : 0);
      result = result * 37 + (errmsg != null ? errmsg.hashCode() : 0);
      result = result * 37 + (magic != null ? magic.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Result, Builder> {
    public Long errcode;

    public String errmsg;

    public Long magic;

    public Builder() {
    }

    /**
     * 每个协议自己定义, 0-999是系统保留
     */
    public Builder errcode(Long errcode) {
      this.errcode = errcode;
      return this;
    }

    /**
     * 错误信息，可以被用来展示(包含了i18n的功能)
     */
    public Builder errmsg(String errmsg) {
      this.errmsg = errmsg;
      return this;
    }

    /**
     * 兼容处理: 0x4861676f
     */
    public Builder magic(Long magic) {
      this.magic = magic;
      return this;
    }

    @Override
    public Result build() {
      return new Result(errcode, errmsg, magic, super.buildUnknownFields());
    }
  }
}
