// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: common.proto
package common;

import android.os.Parcelable;
import com.squareup.wire.AndroidMessage;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.lang.Object;
import java.lang.Override;
import okio.ByteString;

/**
 * 用一个很通用的名称表征通用response结构
 */
public final class Response extends AndroidMessage<Response, Response.Builder> {
  public static final ProtoAdapter<Response> ADAPTER = ProtoAdapter.newMessageAdapter(Response.class);

  public static final Creator<Response> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "common.Result#ADAPTER"
  )
  public final Result result;

  public Response(Result result) {
    this(result, ByteString.EMPTY);
  }

  public Response(Result result, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.result = result;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.result = result;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Response)) return false;
    Response o = (Response) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(result, o.result);
  }

  @Override
  public int hashCode() {
    int result_ = super.hashCode;
    if (result_ == 0) {
      result_ = unknownFields().hashCode();
      result_ = result_ * 37 + (result != null ? result.hashCode() : 0);
      super.hashCode = result_;
    }
    return result_;
  }

  public static final class Builder extends Message.Builder<Response, Builder> {
    public Result result;

    public Builder() {
    }

    public Builder result(Result result) {
      this.result = result;
      return this;
    }

    @Override
    public Response build() {
      return new Response(result, super.buildUnknownFields());
    }
  }
}
