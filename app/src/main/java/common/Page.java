// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: common.proto
package common;

import android.os.Parcelable;
import com.squareup.wire.AndroidMessage;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import okio.ByteString;

/**
 * ///////////////////////BIZ//////////////////////////////////
 * ///////////////////////PAGE//////////////////////////////////
 * 统一的分页结构体
 * 客户端请求带上：snap(第一次为0),  offset 和 limit
 * 服务器返回: snap,  offset(==0，偏移从0开始), limit, total
 * 全量列表: offset<0, limit <0
 */
public final class Page extends AndroidMessage<Page, Page.Builder> {
  public static final ProtoAdapter<Page> ADAPTER = ProtoAdapter.newMessageAdapter(Page.class);

  public static final Creator<Page> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_SNAP = 0L;

  public static final Long DEFAULT_OFFSET = 0L;

  public static final Long DEFAULT_LIMIT = 0L;

  public static final Long DEFAULT_TOTAL = 0L;

  /**
   * 快照版本号
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long snap;

  /**
   * 偏移 （<0:全量）
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long offset;

  /**
   * 长度限制（<0:全量）
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long limit;

  /**
   * 总长度
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long total;

  public Page(Long snap, Long offset, Long limit, Long total) {
    this(snap, offset, limit, total, ByteString.EMPTY);
  }

  public Page(Long snap, Long offset, Long limit, Long total, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.snap = snap;
    this.offset = offset;
    this.limit = limit;
    this.total = total;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.snap = snap;
    builder.offset = offset;
    builder.limit = limit;
    builder.total = total;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Page)) return false;
    Page o = (Page) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(snap, o.snap)
        && Internal.equals(offset, o.offset)
        && Internal.equals(limit, o.limit)
        && Internal.equals(total, o.total);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (snap != null ? snap.hashCode() : 0);
      result = result * 37 + (offset != null ? offset.hashCode() : 0);
      result = result * 37 + (limit != null ? limit.hashCode() : 0);
      result = result * 37 + (total != null ? total.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Page, Builder> {
    public Long snap;

    public Long offset;

    public Long limit;

    public Long total;

    public Builder() {
    }

    /**
     * 快照版本号
     */
    public Builder snap(Long snap) {
      this.snap = snap;
      return this;
    }

    /**
     * 偏移 （<0:全量）
     */
    public Builder offset(Long offset) {
      this.offset = offset;
      return this;
    }

    /**
     * 长度限制（<0:全量）
     */
    public Builder limit(Long limit) {
      this.limit = limit;
      return this;
    }

    /**
     * 总长度
     */
    public Builder total(Long total) {
      this.total = total;
      return this;
    }

    @Override
    public Page build() {
      return new Page(snap, offset, limit, total, super.buildUnknownFields());
    }
  }
}
